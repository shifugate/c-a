!function(e){function r(o){if(t[o])return t[o].exports;var i=t[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}var t={};return r.m=e,r.c=t,r.p="",r(0)}([function(e,r){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerShader("alphavideomap",{schema:{src:{type:"map"},alpha:{type:"map"},transparent:{default:!0,is:"uniform"}},init:function(e){var r=new THREE.VideoTexture(e.src);r.minFilter=THREE.LinearFilter,s=new THREE.VideoTexture(e.alpha);s.minFilter=THREE.LinearFilter,this.material=new THREE.ShaderMaterial({uniforms:{alpha:{type:"t",value:s},texture:{type:"t",value:r}},vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})},update:function(e){this.material.color=e.color,this.material.src=e.src,this.material.transparent=e.transparent},vertexShader:["varying vec2 vUv;","void main(void)","{","vUv = uv;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;", "uniform sampler2D alpha;","varying vec2 vUv;","void main(void)","{","vec3 tColor = texture2D( texture, vUv ).rgb;","vec3 aColor = texture2D( alpha, vUv ).rgb;","float a = (length(aColor));","gl_FragColor = vec4(tColor, a);","}"].join("\n")})}]);AFRAME.registerShader("alphavideopremul",{schema:{src:{type:"map"},transparent:{default:!0,is:"uniform"}},init:function(e){var r=new THREE.VideoTexture(e.src);r.minFilter=THREE.LinearFilter,this.material=new THREE.ShaderMaterial({uniforms:{texture:{type:"t",value:r}},vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})},update:function(e){this.material.src=e.src,this.material.transparent=e.transparent},vertexShader:["varying vec2 vUv;","void main(void)","{","vUv = uv;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec2 vUv;","void main(void)","{","vec3 tColor = texture2D( texture, vUv ).rgb;","float a = (length(tColor));","gl_FragColor = vec4(tColor, a);","}"].join("\n")})}]);
